_TEXT SEGMENT
	ASSUME CS:_TEXT
	dw OFFSET _TEXT:F_11c6
	dw OFFSET _TEXT:F_0277
	dw OFFSET _TEXT:F_0350
	dw OFFSET _TEXT:F_041d
	dw OFFSET _TEXT:F_048f
	dw OFFSET _TEXT:F_0505
	dw OFFSET _TEXT:F_088e
	dw 0h
	dw OFFSET _TEXT:F_05d3
	dw OFFSET _TEXT:F_0646
	dw OFFSET _TEXT:F_0694
	dw OFFSET _TEXT:F_06c9
	dw OFFSET _TEXT:F_0724
	dw OFFSET _TEXT:F_0792
	dw OFFSET _TEXT:F_07c4
	dw OFFSET _TEXT:F_081d
	dw OFFSET _TEXT:F_091d
	dw OFFSET _TEXT:F_0ae3
	dw OFFSET _TEXT:F_0c14
	dw OFFSET _TEXT:F_0d39
	dw OFFSET _TEXT:F_0d9e
	dw OFFSET _TEXT:F_0e2e
	dw OFFSET _TEXT:F_0ea5
	dw OFFSET _TEXT:F_0fac
	dw OFFSET _TEXT:F_0fff
	dw OFFSET _TEXT:F_114c
W_GR_SEGMENT	dw 0A000h
B_0036	db 12h
B_0037	db 34h
B_0038	db 56h
B_0039	db 78h
	db 0D5h
	db 0AAh
	db 0C3h
	db 3Ch
	db 1h
	db 2h
	db 4h
	db 8h
	db 10h
	db 20h
	db 40h
	db 80h
W_pShapes_0	dw 0h
W_pShapes_1	dw 0h
W_pCharset_0	dw 0h
W_pCharset_1	dw 0h
W_pExit_0	dw 0h
W_0050	dw 0h
U_0052	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
U_0062	dw 0000h
U_0064	dw 0000h
U_0066	dw 0000h
U_0068	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
U_0082	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
U_0112	dw 0000h
U_0114	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
U_0122	dw 0000h
U_0124	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
U_01ba	dw 0000h
U_01bc	dw 0000h
U_01be	dw 0000h
U_01c0	dw 0000h
U_01c2	dw 0000h
U_01c4	dw 0000h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 01h
	db 02h
	db 03h
	db 04h
	db 05h
	db 06h
	db 07h
	db 38h
	db 39h
	db 3Ah
	db 3Bh
	db 3Ch
	db 3Dh
	db 3Eh
	db 3Fh
	db 00h
	db 00h
	db 02h
	db 01h
	db 07h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	db 00h
	; Func
	; Func
F_0277 PROC FAR
	PUSH       BP
	MOV        BP,SP
	SUB        SP,6h
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	LDS        SI,dword ptr CS:[W_pShapes_0]
	MOV        AX,word ptr [BP + 6h]
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	ADD        SI,AX
	MOV        BX,word ptr [BP + 8h]
	SHL        BX,1h
	ADD        SI,BX
	MOV        word ptr [BP + -6h],SI
	MOV        word ptr [BP + -2h],8h
L_02b3:
	MOV        DI,word ptr [BP + 0ch]
	SHR        DI,1h
	MOV        BX,word ptr [BP + 0ah]
	SHL        BX,1h
	ADD        DI,word ptr CS:[BX + U_0052]
	MOV        AX,word ptr [BP + -2h]
	MOV        DX,3c5h
	OUT        DX,AL
	MOV        CX,2h
L_02cc:
	LODSB
	MOV        byte ptr [BP + -4h],8h
	CMP        word ptr [BP + 0eh],1h
	JZ         L_0329
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	MOV        AH,AL
	SHL        AL,1h
	RCL        BX,1h
	SHL        AH,1h
	RCL        BX,1h
	JMP        L_032b
L_0329:
	MOV        BL,AL
L_032b:
	CMP        word ptr [BP + 0eh],1h
	JZ         L_0334
	MOV        AL,BH
	STOSB
L_0334:
	MOV        AL,BL
	STOSB
	LOOP       L_02cc
	ADD        word ptr [BP + -6h],20h
	MOV        SI,word ptr [BP + -6h]
	SHR        word ptr [BP + -2h],1h
	JZ         L_0348
	JMP        L_02b3
L_0348:
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	MOV        SP,BP
	POP        BP
	RETF
	; Func
	; Func
F_0277 ENDP
F_0350 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        AH,byte ptr [BP + 6h]
	MOV        AL,byte ptr [BP + 8h]
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        DS,word ptr CS:[W_pShapes_1]
	MOV        SI,word ptr [BP + 0ah]
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	ADD        SI,word ptr CS:[W_pShapes_0]
	MOV        BX,word ptr [BP + 0ch]
	SHL        BX,1h
L_0388:
	MOV        DL,byte ptr [BP + 8h]
	MOV        DI,word ptr [BP + 0eh]
	SHR        DI,1h
	ADD        DI,word ptr CS:[BX + U_0052]
L_0395:
	MOV        CX,10h
	MOV        DH,8h
L_039a:
	MOV        AL,DH
	PUSH       DX
	MOV        DX,3c5h
	OUT        DX,AL
	POP        DX
	LODSW
	MOV        word ptr ES:[DI],AX
	LODSW
	MOV        word ptr ES:[DI + 28h],AX
	LODSW
	MOV        word ptr ES:[DI + 50h],AX
	LODSW
	MOV        word ptr ES:[DI + 78h],AX
	LODSW
	MOV        word ptr ES:[DI + 0a0h],AX
	LODSW
	MOV        word ptr ES:[DI + 0c8h],AX
	LODSW
	MOV        word ptr ES:[DI + 0f0h],AX
	LODSW
	MOV        word ptr ES:[DI + 118h],AX
	LODSW
	MOV        word ptr ES:[DI + 140h],AX
	LODSW
	MOV        word ptr ES:[DI + 168h],AX
	LODSW
	MOV        word ptr ES:[DI + 190h],AX
	LODSW
	MOV        word ptr ES:[DI + 1b8h],AX
	LODSW
	MOV        word ptr ES:[DI + 1e0h],AX
	LODSW
	MOV        word ptr ES:[DI + 208h],AX
	LODSW
	MOV        word ptr ES:[DI + 230h],AX
	LODSW
	MOV        word ptr ES:[DI + 258h],AX
	SHR        DH,1h
	JNZ        L_039a
	SUB        SI,80h
	ADD        DI,2h
	DEC        DL
	JNZ        L_0395
	ADD        BX,20h
	DEC        word ptr [BP + 6h]
	JZ         L_0417
	JMP        L_0388
L_0417:
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	POP        BP
	RETF
	; Func
	; Func
F_0350 ENDP
F_041d PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,1h
	OUT        DX,AL
	MOV        BX,15ah
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	IN         AL,61h
	PUSH       AX
	MOV        DH,AL
	AND        DH,0fch
	MOV        AX,CS:[W_GR_SEGMENT]
	MOV        ES,AX
	MOV        DS,AX
L_044f:
	MOV        DI,word ptr CS:[BX + U_0052 + 14h]
	MOV        SI,word ptr CS:[BX + U_0052 + 10h]
	INC        SI
	INC        DI
	MOV        CX,16h
	REP MOVSB
	CMP        byte ptr [BP + 6h],0h
	JZ         L_0474
	CALL       F_0ec6
	AND        AL,1h
	JZ         L_0474
	XOR        DH,2h
	MOV        AL,DH
	OUT        61h,AL
L_0474:
	DEC        BX
	DEC        BX
	JNZ        L_044f
	POP        AX
	OUT        61h,AL
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	POP        BP
	RETF       2h
	; Func
	; Func
F_041d ENDP
F_048f PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,1h
	OUT        DX,AL
	MOV        BX,0h
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	IN         AL,61h
	PUSH       AX
	MOV        DH,AL
	AND        DH,0fch
	MOV        AX,CS:[W_GR_SEGMENT]
	MOV        ES,AX
	MOV        DS,AX
L_04c1:
	MOV        DI,word ptr CS:[BX + U_0062]
	MOV        SI,word ptr CS:[BX + U_0066]
	INC        SI
	INC        DI
	MOV        CX,16h
	REP MOVSB
	CMP        byte ptr [BP + 6h],0h
	JZ         L_04e6
	CALL       F_0ec6
	AND        AL,1h
	JZ         L_04e6
	XOR        DH,2h
	MOV        AL,DH
	OUT        61h,AL
L_04e6:
	INC        BX
	INC        BX
	CMP        BX,15ah
	JNZ        L_04c1
	POP        AX
	OUT        61h,AL
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	POP        BP
	RETF       2h
	; Func
	; Func
F_048f ENDP
F_0505 PROC FAR
	PUSH       BP
	MOV        BP,SP
	SUB        SP,2h
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        DS,word ptr CS:[W_pShapes_1]
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        BX,10h
L_0525:
	MOV        byte ptr [BP + -2h],0bh
	MOV        DI,word ptr CS:[BX + U_0052]
	ADD        DI,1h
L_0531:
	MOV        SI,word ptr [BP + 0Ah]
	INC        word ptr [BP + 0Ah]
	MOV        SI,word ptr SS:[SI]
	AND        SI,0ffh
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	SHL        SI,1h
	ADD        SI,word ptr CS:[W_pShapes_0]
	MOV        CH,8h
L_0553:
	MOV        AL,CH
	OUT        DX,AL
	LODSW
	MOV        word ptr ES:[DI],AX
	LODSW
	MOV        word ptr ES:[DI + 28h],AX
	LODSW
	MOV        word ptr ES:[DI + 50h],AX
	LODSW
	MOV        word ptr ES:[DI + 78h],AX
	LODSW
	MOV        word ptr ES:[DI + 0a0h],AX
	LODSW
	MOV        word ptr ES:[DI + 0c8h],AX
	LODSW
	MOV        word ptr ES:[DI + 0f0h],AX
	LODSW
	MOV        word ptr ES:[DI + 118h],AX
	LODSW
	MOV        word ptr ES:[DI + 140h],AX
	LODSW
	MOV        word ptr ES:[DI + 168h],AX
	LODSW
	MOV        word ptr ES:[DI + 190h],AX
	LODSW
	MOV        word ptr ES:[DI + 1b8h],AX
	LODSW
	MOV        word ptr ES:[DI + 1e0h],AX
	LODSW
	MOV        word ptr ES:[DI + 208h],AX
	LODSW
	MOV        word ptr ES:[DI + 230h],AX
	LODSW
	MOV        word ptr ES:[DI + 258h],AX
	SHR        CH,1h
	JNZ        L_0553
	ADD        DI,2h
	DEC        byte ptr [BP + -2h]
	JZ         L_05c0
	JMP        L_0531
L_05c0:
	ADD        BX,20h
	DEC        word ptr [BP + 6h]
	JZ         L_05cb
	JMP        L_0525
L_05cb:
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	MOV        SP,BP
	POP        BP
	RETF
	; Func
	; Func
F_0505 ENDP
F_05d3 PROC FAR
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,1h
	OUT        DX,AL
	MOV        DS,word ptr CS:[W_GR_SEGMENT]
	PUSH       DS
	POP        ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        AH,58h
	MOV        BX,112h
	MOV        DX,18h
L_05fe:
	MOV        DI,word ptr CS:[BX]
	ADD        DI,DX
	MOV        SI,word ptr CS:[BX + 10h]
	ADD        SI,DX
	ADD        BX,2h
	MOV        CX,10h
	REP MOVSB
	DEC        AH
	JNZ        L_05fe
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        AX,0h
	MOV        BX,1c2h
	MOV        DX,8h
L_0630:
	MOV        DI,word ptr CS:[BX]
	ADD        DI,18h
	ADD        BX,2h
	MOV        CX,8h
	REP STOSW
	DEC        DX
	JNZ        L_0630
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	RETF
	; Func
	; Func
F_05d3 ENDP
F_0646 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       DI
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,7h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,18h
	OUT        DX,AL
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        AH,0b0h
	MOV        BX,10h
L_066d:
	MOV        CX,16h
	MOV        DI,word ptr CS:[BX + U_0052]
	ADD        BX,2h
	INC        DI
L_0679:
	OR         byte ptr ES:[DI],0ffh
	INC        DI
	LOOP       L_0679
	DEC        AH
	JNZ        L_066d
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	POP        ES
	POP        DI
	POP        BP
	RETF
	; Func
	; Func
F_0646 ENDP
F_0694 PROC FAR
	PUSH       DI
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        AX,0h
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        BX,10h
L_06b2:
	MOV        DI,word ptr CS:[BX + U_0052]
	ADD        BX,2h
	INC        DI
	MOV        CX,0bh
	REP STOSW
	CMP        BX,170h
	JNZ        L_06b2
	POP        ES
	POP        DI
	RETF
	; Func
	; Func
F_0694 ENDP
F_06c9 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       DI
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,7h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,18h
	OUT        DX,AL
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        BX,word ptr [BP + 6h]
	INC        BX
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	MOV        AH,8h
L_06f9:
	MOV        CX,0fh
	MOV        DI,word ptr CS:[BX + U_0052]
	ADD        BX,2h
	ADD        DI,18h
L_0707:
	OR         byte ptr ES:[DI],0ffh
	INC        DI
	LOOP       L_0707
	DEC        AH
	JNZ        L_06f9
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	POP        ES
	POP        DI
	POP        BP
	RETF       2h
	; Func
	; Func
F_06c9 ENDP
F_0724 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,7h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,18h
	OUT        DX,AL
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        BX,word ptr [BP + 8h]
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	ADD        BX,word ptr [BP + 6h]
	OR         byte ptr ES:[BX],0ffh
	OR         byte ptr ES:[BX + 28h],0ffh
	OR         byte ptr ES:[BX + 50h],0ffh
	OR         byte ptr ES:[BX + 78h],0ffh
	OR         byte ptr ES:[BX + 0a0h],0ffh
	OR         byte ptr ES:[BX + 0c8h],0ffh
	OR         byte ptr ES:[BX + 0f0h],0ffh
	OR         byte ptr ES:[BX + 118h],0ffh
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	POP        ES
	POP        BP
	RETF
	; Func
	; Func
F_0724 ENDP
F_0792 PROC FAR
	PUSH       DI
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        AX,0h
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        BX,10h
L_07ab:
	MOV        DI,word ptr CS:[BX + U_0052]
	ADD        DI,18h
	ADD        BX,2h
	MOV        CX,0fh
	REP STOSB
	CMP        BX,90h
	JNZ        L_07ab
	POP        ES
	POP        DI
	RETF
	; Func
	; Func
F_0792 ENDP
F_07c4 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        CX,word ptr [BP + 8h]
	AND        CX,7h
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,80h
	SHR        AL,CL
	OUT        DX,AL
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        BL,byte ptr [BP + 0ah]
	MOV        BH,0h
	MOV        AL,byte ptr CS:[BX + 1f3h]
	OUT        DX,AL
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	MOV        AX,word ptr [BP + 8h]
	SHR        AX,1h
	SHR        AX,1h
	SHR        AX,1h
	ADD        BX,AX
	OR         byte ptr ES:[BX],0ffh
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        BP
	RETF
	; Func
	; Func
F_07c4 ENDP
F_081d PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        CX,word ptr [BP + 8h]
	AND        CX,7h
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,18h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,80h
	SHR        AL,CL
	OUT        DX,AL
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        BL,byte ptr [BP + 0ah]
	MOV        BH,0h
	MOV        AL,byte ptr CS:[BX + 1f3h]
	OUT        DX,AL
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	MOV        AX,word ptr [BP + 8h]
	SHR        AX,1h
	SHR        AX,1h
	SHR        AX,1h
	ADD        BX,AX
	OR         byte ptr ES:[BX],0ffh
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        BP
	RETF
	; Func
	; Func
F_081d ENDP
F_088e PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       DI
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        CX,word ptr [BP + 8h]
	AND        CX,7h
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,18h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,80h
	SHR        AL,CL
	OUT        DX,AL
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	MOV        DI,word ptr [BP + 8h]
	SHR        DI,1h
	SHR        DI,1h
	SHR        DI,1h
	ADD        DI,BX
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,8h
	OUT        DX,AL
	AND        byte ptr ES:[DI],0h
	MOV        DX,3c5h
	MOV        BL,byte ptr [BP + 0ah]
	MOV        BH,0h
	MOV        AL,byte ptr CS:[BX + 1f3h]
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,10h
	OUT        DX,AL
	OR         byte ptr ES:[DI],0ffh
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        DI
	POP        BP
	RETF
	; Func
	; Func
F_088e ENDP
F_091d PROC FAR
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	PUSH       BP
	MOV        BP,SP
	SUB        SP,0eh
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        AX,SS
	MOV        DS,AX
	MOV        AX,0h
	PUSH       AX
	PUSH       word ptr [BP + 6h]
	CALL       F_0f5f
	ADD        SP,4h
	MOV        word ptr [BP + -6h],AX
	INC        AX
	JNZ        L_0954
L_094a:
	MOV        AX,3h
	PUSH       AX
	PUSH       AX
	JMP DWORD PTR CS:[W_pExit_0]
L_0954:
	MOV        BX,word ptr [BP + -6h]
	MOV        AL,2h
	MOV        CX,0h
	MOV        DX,0h
	MOV        AH,42h
	INT        21h
	MOV        word ptr [BP + -0eh],AX
	MOV        BX,word ptr [BP + -6h]
	MOV        AL,0h
	MOV        CX,0h
	MOV        DX,0h
	MOV        AH,42h
	INT        21h
	PUSH       word ptr [BP + -0eh]
	CALL       F_0f18
	ADD        SP,2h
	MOV        word ptr [BP + -2h],DX
	MOV        word ptr [BP + -4h],AX
	TEST       DX,0ffffh
	JZ         L_094a
	MOV        DX,0h
	MOV        DI,DX
	SHL        DI,1h
	MOV        DI,word ptr CS:[DI + U_0052]
	ADD        DI,word ptr [BP + 8h]
	MOV        BX,0h
	MOV        ES,word ptr [BP + 0ah]
	TEST       word ptr [BP + 0ah],0ffffh
	JNZ        L_09ab
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
L_09ab:
	PUSH       BX
	PUSH       DX
	PUSH       DI
	PUSH       word ptr [BP + -0eh]
	PUSH       word ptr [BP + -2h]
	PUSH       word ptr [BP + -4h]
	PUSH       word ptr [BP + -6h]
	CALL       F_0f75
	ADD        SP,8h
	MOV        DS,word ptr [BP + -2h]
	POP        DI
	POP        DX
	POP        BX
	MOV        SI,word ptr [BP + -4h]
	MOV        byte ptr [BP + -0ch],80h
	TEST       word ptr [BP + 0ah],0ffffh
	JNZ        L_09d7
	JMP        L_0a50
	db 90h
L_09d7:
	MOV        AH,80h
	MOV        BX,1f40h
	PUSH       AX
	PUSH       CX
	PUSH       DI
	MOV        AX,0h
	MOV        CX,3e80h
	REP STOSW
	POP        DI
	POP        CX
	POP        AX
L_09ea:
	MOV        CX,1h
	LODSB
	CMP        AL,2h
	JNZ        L_09f8
	LODSB
	MOV        CL,AL
	LODSB
	MOV        CH,AL
L_09f8:
	SHL        AL,1h
	JNC        L_09ff
	OR         byte ptr ES:[DI],AH
L_09ff:
	SHL        AL,1h
	JNC        L_0a08
	OR         byte ptr ES:[DI + 1f40h],AH
L_0a08:
	SHL        AL,1h
	JNC        L_0a11
	OR         byte ptr ES:[DI + 3e80h],AH
L_0a11:
	SHL        AL,1h
	JNC        L_0a1a
	OR         byte ptr ES:[DI + 5dc0h],AH
L_0a1a:
	SHR        AH,1h
	SHL        AL,1h
	JNC        L_0a23
	OR         byte ptr ES:[DI],AH
L_0a23:
	SHL        AL,1h
	JNC        L_0a2c
	OR         byte ptr ES:[DI + 1f40h],AH
L_0a2c:
	SHL        AL,1h
	JNC        L_0a35
	OR         byte ptr ES:[DI + 3e80h],AH
L_0a35:
	SHL        AL,1h
	JNC        L_0a3e
	OR         byte ptr ES:[DI + 5dc0h],AH
L_0a3e:
	SHR        AH,1h
	MOV        AL,CH
	JNC        L_0a4a
	MOV        AH,80h
	INC        DI
	DEC        BX
	JZ         L_0aba
L_0a4a:
	DEC        CL
	JNZ        L_09f8
	JMP        L_09ea
L_0a50:
	MOV        CX,1h
	LODSB
	CMP        AL,2h
	JNZ        L_0a5c
	LODSB
	MOV        CL,AL
	LODSB
L_0a5c:
	PUSH       DX
	PUSH       AX
	MOV        DX,3c5h
	SHR        AL,1h
	SHR        AL,1h
	SHR        AL,1h
	SHR        AL,1h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,byte ptr [BP + -0ch]
	OUT        DX,AL
	OR         byte ptr ES:[BX + DI],0ffh
	ROR        byte ptr [BP + -0ch],1h
	CMP        byte ptr [BP + -0ch],80h
	JNZ        L_0a7f
	INC        BX
L_0a7f:
	POP        AX
	PUSH       AX
	MOV        DX,3c5h
	AND        AL,0fh
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,byte ptr [BP + -0ch]
	OUT        DX,AL
	OR         byte ptr ES:[BX + DI],0ffh
	ROR        byte ptr [BP + -0ch],1h
	CMP        byte ptr [BP + -0ch],80h
	JNZ        L_0a9c
	INC        BX
L_0a9c:
	POP        AX
	POP        DX
	CMP        BX,28h
	JC         L_0ab6
	INC        DX
	CMP        DX,0c8h
	JZ         L_0aba
	MOV        DI,DX
	SHL        DI,1h
	MOV        DI,word ptr CS:[DI + U_0052]
	MOV        BX,0h
L_0ab6:
	LOOP       L_0a5c
	JMP        L_0a50
L_0aba:
	PUSH       word ptr [BP + -6h]
	CALL       F_0f99
	ADD        SP,2h
	PUSH       word ptr [BP + -2h]
	PUSH       word ptr [BP + -4h]
	CALL       F_0f47
	ADD        SP,4h
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	MOV        SP,BP
	POP        BP
	RETF
	; Func
	; Func
F_091d ENDP
F_0ae3 PROC FAR
	PUSH       BP
	MOV        BP,SP
	SUB        SP,6h
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        AX,SS
	MOV        DS,AX
	MOV        AX,7d00h
	PUSH       AX
	CALL       F_0f18
	ADD        SP,2h
	MOV        word ptr [BP + -2h],DX
	MOV        word ptr [BP + -4h],AX
	TEST       DX,0ffffh
	JNZ        L_0b1d
	;PUSH       CS
	CALL       F_0694
	MOV        AX,0h
	PUSH       AX
	PUSH       AX
	PUSH       word ptr [BP + 6h]
	;PUSH       CS
	CALL       F_091d
	ADD        SP,6h
	JMP        L_0c0a
L_0b1d:
	MOV        ES,DX
	MOV        DI,AX
	MOV        CX,3e80h
	MOV        AX,0h
	REP STOSW
	PUSH       word ptr [BP + -2h]
	PUSH       word ptr [BP + -4h]
	PUSH       word ptr [BP + 6h]
	;PUSH       CS
	CALL       F_091d
	ADD        SP,6h
	LDS        AX,[BP + -4h]
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        CL,1h
L_0b43:
	MOV        DI,8h
L_0b46:
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,1h
	OUT        DX,AL
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        SI,DI
	SHL        SI,1h
	MOV        SI,word ptr CS:[SI + U_0052]
	MOV        BX,1h
	MOV        DX,0ch
	SUB        DL,CL
L_0b6f:
	MOV        AL,byte ptr ES:[BX + SI + 1h]
	MOV        byte ptr ES:[BX + SI],AL
	INC        BX
	CMP        BX,DX
	JC         L_0b6f
	MOV        BX,16h
	MOV        DX,0ch
	ADD        DL,CL
L_0b83:
	MOV        AL,byte ptr ES:[BX + SI + -1h]
	MOV        byte ptr ES:[BX + SI],AL
	DEC        BX
	CMP        BX,DX
	JNC        L_0b83
	INC        DI
	CMP        DI,0b8h
	JC         L_0b46
	MOV        DX,3ceh
	MOV        AL,5h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
L_0ba2:
	MOV        word ptr [BP + -6h],0h
	MOV        AL,8h
L_0ba9:
	MOV        AH,8h
	MOV        DX,3c5h
	OUT        DX,AL
L_0baf:
	MOV        BL,AH
	MOV        BH,0h
	MOV        SI,BX
	SHL        SI,1h
	MOV        SI,word ptr CS:[SI + U_0052]
	MOV        DI,SI
	ADD        SI,word ptr [BP + -6h]
	MOV        BX,0ch
	SUB        BL,CL
	ADD        SI,BX
	ADD        DI,BX
	MOV        DX,0bh
	ADD        DL,CL
	SUB        DX,BX
	XCHG       CX,DX
	INC        CX
	REP MOVSB
	XCHG       CX,DX
	INC        AH
	CMP        AH,0b8h
	JC         L_0baf
	ADD        word ptr [BP + -6h],1f40h
	SHR        AL,1h
	JNC        L_0ba9
	MOV        AX,0h
L_0beb:
	DEC        AX
	JNZ        L_0beb
	INC        CL
	CMP        CL,0bh
	JNC        L_0bf8
	JMP        L_0b43
L_0bf8:
	JZ         L_0ba2
	MOV        AX,SS
	MOV        DS,AX
	PUSH       word ptr [BP + -2h]
	PUSH       word ptr [BP + -4h]
	CALL       F_0f47
	ADD        SP,4h
L_0c0a:
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	MOV        SP,BP
	POP        BP
	RETF       2h
	; Func
	; Func
F_0ae3 ENDP
F_0c14 PROC FAR
	PUSH       BP
	MOV        BP,SP
	SUB        SP,10h
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        AX,word ptr [BP + 6h]
	MOV        word ptr [BP + -10h],AX
	MOV        AX,word ptr [BP + 0ah]
	MOV        word ptr [BP + -6h],AX
	MOV        AX,word ptr [BP + 0ch]
	MOV        word ptr [BP + -0ah],AX
	MOV        SI,word ptr [BP + 8h]
	SUB        SI,word ptr [BP + 6h]
	PUSH       SI
	CALL       F_0eee
	ADD        SP,2h
	MOV        word ptr [BP + -2h],AX
	MOV        AX,word ptr [BP + 0eh]
	SUB        AX,word ptr [BP + 0ah]
	PUSH       AX
	CALL       F_0eee
	ADD        SP,2h
	MOV        word ptr [BP + -08h],AX
	MOV        AX,word ptr [BP + 10h]
	SUB        AX,word ptr [BP + 0ch]
	PUSH       AX
	CALL       F_0eee
	ADD        SP,2h
	MOV        word ptr [BP + -0eh],AX
	PUSH       SI
	CALL       F_0f09
	ADD        SP,2h
	SHR        AX,1h
	MOV        word ptr [BP + -0ch],AX
	MOV        word ptr [BP + -4h],AX
	MOV        DS,word ptr CS:[W_GR_SEGMENT]
L_0c80:
	MOV        CL,byte ptr [BP + -10h]
	AND        CL,7h
	MOV        AL,80h
	SHR        AL,CL
	MOV        DX,3cfh
	OUT        DX,AL
	MOV        SI,word ptr [BP + -10h]
	SHR        SI,1h
	SHR        SI,1h
	SHR        SI,1h
	MOV        DI,word ptr [BP + -6h]
	SHL        DI,1h
	MOV        CX,word ptr [BP + -0ah]
	SUB        CX,word ptr [BP + -6h]
	INC        CX
	MOV        DX,3c5h
	TEST       byte ptr [BP + 14h],0ffh
	JZ         L_0cbe
	MOV        AL,0fh
	OUT        DX,AL
L_0caf:
	MOV        BX,word ptr CS:[DI + U_0052]
	ADD        DI,2h
	AND        byte ptr [BX + SI],0h
	LOOP       L_0caf
	JMP        L_0cd6
L_0cbe:
	MOV        BL,byte ptr [BP + 12h]
	MOV        BH,0h
	MOV        AL,byte ptr CS:[BX + 1f3h]
	OUT        DX,AL
L_0cc9:
	MOV        BX,word ptr CS:[DI + U_0052]
	ADD        DI,2h
	OR         byte ptr [BX + SI],0ffh
	LOOP       L_0cc9
L_0cd6:
	MOV        AX,word ptr [BP + -2h]
	ADD        word ptr [BP + -10h],AX
	MOV        AX,word ptr [BP + 0eh]
	SUB        AX,word ptr [BP + 0ah]
	JNS        L_0ce6
	NEG        AX
L_0ce6:
	SUB        word ptr [BP + -0ch],AX
	MOV        AX,word ptr [BP + 10h]
	SUB        AX,word ptr [BP + 0ch]
	JNS        L_0cf3
	NEG        AX
L_0cf3:
	SUB        word ptr [BP + -4h],AX
	JNS        L_0d0b
	MOV        AX,word ptr [BP + -08h]
	ADD        word ptr [BP + -6h],AX
	MOV        SI,word ptr [BP + 8h]
	SUB        SI,word ptr [BP + 6h]
	JNS        L_0d08
	NEG        SI
L_0d08:
	ADD        word ptr [BP + -0ch],SI
L_0d0b:
	CMP        word ptr [BP + -4h],0h
	JNS        L_0d1a
	MOV        AX,word ptr [BP + -0eh]
	ADD        word ptr [BP + -0ah],AX
	ADD        word ptr [BP + -4h],SI
L_0d1a:
	MOV        AX,word ptr [BP + -10h]
	CMP        AX,word ptr [BP + 8h]
	JZ         L_0d25
	JMP        L_0c80
L_0d25:
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	MOV        SP,BP
	POP        BP
	RETF
	; Func
	; Func
F_0c14 ENDP
F_0d39 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       SI
	PUSH       ES
	LES        BX,dword ptr CS:[W_pCharset_0]
	MOV        SI,7h
L_0d46:
	MOV        AX,SI
	SHL        AX,1h
	MOV        DI,AX
	ADD        DI,word ptr [BP + 6h]
	MOV        DI,word ptr SS:[DI]
	CMP        word ptr SS:[DI],0h
	JNZ        L_0d7d
	MOV        AL,byte ptr ES:[BX + SI]
	MOV        byte ptr ES:[BX + SI + 0e0h],AL
	MOV        AL,byte ptr ES:[BX + SI + 8h]
	MOV        byte ptr ES:[BX + SI + 0e8h],AL
	MOV        AL,byte ptr ES:[BX + SI + 10h]
	MOV        byte ptr ES:[BX + SI + 0f0h],AL
	MOV        AL,byte ptr ES:[BX + SI + 18h]
	MOV        byte ptr ES:[BX + SI + 0f8h],AL
	JMP        L_0d95
L_0d7d:
	MOV        byte ptr ES:[BX + SI + 0e0h],0h
	MOV        byte ptr ES:[BX + SI + 0e8h],0h
	MOV        byte ptr ES:[BX + SI + 0f0h],0h
	MOV        byte ptr ES:[BX + SI + 0f8h],0h
L_0d95:
	DEC        SI
	JNS        L_0d46
	POP        ES
	POP        SI
	POP        BP
	RETF       2h
	; Func
	; Func
F_0d39 ENDP
F_0d9e PROC FAR
	PUSH       DS
	LDS        BX,dword ptr CS:[W_pShapes_0]
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,0h
	AND        AL,0ch
	XOR        word ptr [BX + 25aeh],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,80h
	AND        AL,0dh
	XOR        word ptr [BX + 25b0h],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,0c0h
	AND        AL,1fh
	XOR        word ptr [BX + 25b2h],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,0c0h
	AND        AL,1fh
	XOR        word ptr [BX + 25b4h],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,80h
	AND        AL,0fh
	XOR        word ptr [BX + 25b6h],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,0c0h
	AND        AL,1fh
	XOR        word ptr [BX + 25b8h],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,40h
	AND        AL,12h
	XOR        word ptr [BX + 25bah],AX
	CALL       F_0ec6
	MOV        AH,AL
	CALL       F_0ec6
	AND        AH,0c0h
	AND        AL,18h
	XOR        word ptr [BX + 25bch],AX
	POP        DS
	RETF
	; Func
	; Func
F_0d9e ENDP
F_0e2e PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       ES
	MOV        AH,0h
	MOV        AL,0dh
	INT        10h
	PUSH       CS
	POP        ES
	MOV        DX,1e2h
	MOV        AH,10h
	MOV        AL,2h
	INT        10h
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	MOV        BX,word ptr [BP + 6h]
	MOV        AX,word ptr SS:[BX]
	MOV        CS:[W_pShapes_0],AX
	MOV        AX,word ptr SS:[BX + 2h]
	MOV        CS:[W_pShapes_1],AX
	MOV        BX,word ptr [BP + 8h]
	MOV        AX,word ptr SS:[BX]
	MOV        CS:[W_pCharset_0],AX
	MOV        AX,word ptr SS:[BX + 2h]
	MOV        CS:[W_pCharset_1],AX
	MOV        AX,word ptr [BP + 0ah]
	MOV        CS:[W_pExit_0],AX
	MOV        AX,word ptr [BP + 4h]
	MOV        CS:[W_0050],AX
	MOV        AX,0h
	MOV        CX,0c8h
	LEA        BX,CS:[U_0052]
L_0e97:
	MOV        word ptr CS:[BX],AX
	ADD        BX,2h
	;ADD        AX,28h
	db 05h,28h,00h ; MASM611 encodes the instruction differently
	LOOP       L_0e97
	POP        ES
	POP        BP
	RETF
	; Func
	; Func
F_0e2e ENDP
F_0ea5 PROC FAR
	PUSH       DI
	PUSH       ES
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        AX,0h
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        DI,0h
	MOV        CX,0fa0h
	REP STOSW
	POP        ES
	POP        DI
	RETF
	; Func
	; Func
F_0ea5 ENDP
F_0ec6 PROC NEAR
	MOV        AL,CS:[B_0039]
	ADC        AL,byte ptr CS:[B_0038]
	MOV        CS:[B_0038],AL
	XOR        byte ptr CS:[B_0037],AL
	MOV        AL,CS:[B_0037]
	ADC        AL,byte ptr CS:[B_0036]
	ROR        AL,1h
	MOV        CS:[B_0036],AL
	MOV        CS:[B_0039],AL
	TEST       AL,0ffh
	RET
	; Func
	; Func
F_0ec6 ENDP
F_0eee PROC NEAR
	PUSH       BP
	MOV        BP,SP
	TEST       word ptr [BP + 4h],0ffffh
	JZ         L_0f04
	JNS        L_0eff
	MOV        AX,0ffffh
	JMP        L_0f07
L_0eff:
	MOV        AX,1h
	JMP        L_0f07
L_0f04:
	MOV        AX,0h
L_0f07:
	POP        BP
	RET
	; Func
	; Func
F_0eee ENDP
F_0f09 PROC NEAR
	PUSH       BP
	MOV        BP,SP
	MOV        AX,word ptr [BP + 4h]
	TEST       AX,0ffffh
	JNS        L_0f16
	NEG        AX
L_0f16:
	POP        BP
	RET
	; Func
	; Func
F_0f09 ENDP
F_0f18:
	PUSH       BP
	MOV        BP,SP
	MOV        BX,word ptr [BP + 4h]
	SHR        BX,1h
	SHR        BX,1h
	SHR        BX,1h
	SHR        BX,1h
	TEST       word ptr [BP + 4h],0fh
	JZ         L_0f2e
	INC        BX
L_0f2e:
	MOV        AH,48h
	INT        21h
	MOV        DX,AX
	MOV        AX,0h
	JNC        L_0f43
	PUSH       AX
	PUSH       AX
	JMP DWORD PTR CS:[W_pExit_0]
	db 0BAh
	db 00h
	db 00h
L_0f43:
	MOV        SP,BP
	POP        BP
	RET
	; Func
	; Func
F_0f47:
	PUSH       ES
	PUSH       BP
	MOV        BP,SP
	MOV        ES,word ptr [BP + 8h]
	MOV        AH,49h
	INT        21h
	MOV        AX,0h
	JNC        L_0f5a
	MOV        AX,0ffffh
L_0f5a:
	MOV        SP,BP
	POP        BP
	POP        ES
	RET
	; Func
	; Func
F_0f5f:
	PUSH       BP
	MOV        BP,SP
	MOV        DX,word ptr [BP + 4h]
	MOV        AL,byte ptr [BP + 6h]
	MOV        AH,3dh
	INT        21h
	JNC        L_0f71
	MOV        AX,0ffffh
L_0f71:
	MOV        SP,BP
	POP        BP
	RET
	; Func
	; Func
F_0f75:
	PUSH       BP
	MOV        BP,SP
	PUSH       DS
	PUSH       SI
	PUSH       DI
	MOV        BX,word ptr [BP + 4h]
	MOV        CX,word ptr [BP + 0ah]
	MOV        DX,word ptr [BP + 6h]
	MOV        AX,word ptr [BP + 8h]
	MOV        DS,AX
	MOV        AH,3fh
	INT        21h
	JNC        L_0f92
	MOV        AX,0ffffh
L_0f92:
	POP        DI
	POP        SI
	POP        DS
	MOV        SP,BP
	POP        BP
	RET
	; Func
	; Func
F_0f99:
	PUSH       BP
	MOV        BP,SP
	MOV        BX,word ptr [BP + 4h]
	MOV        AH,3eh
	INT        21h
	JNC        L_0fa8
	MOV        AX,0ffffh
L_0fa8:
	MOV        SP,BP
	POP        BP
	RET
	; Func
	; Func
F_0fac PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSHF
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        DS,word ptr CS:[W_pShapes_1]
	MOV        AX,DS
	MOV        ES,AX
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	ADD        BX,word ptr CS:[W_pShapes_0]
	PUSH       word ptr [BX + 1eh]
	PUSH       word ptr [BX + 3eh]
	PUSH       word ptr [BX + 5eh]
	PUSH       word ptr [BX + 7eh]
	STD
	LEA        SI,[BX + 7ch]
	LEA        DI,[BX + 7eh]
	MOV        CX,3fh
	REP MOVSW
	POP        word ptr [BX + 60h]
	POP        word ptr [BX + 40h]
	POP        word ptr [BX + 20h]
	POP        word ptr [BX]
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	POPF
	POP        BP
	RETF       2h
	; Func
	; Func
F_0fac ENDP
F_0fff PROC FAR
	PUSH       ES
	LES        BX,dword ptr CS:[W_pShapes_0]
	CALL       F_0ec6
	JS         L_1046
	MOV        AX,word ptr ES:[BX + 506h]
	XCHG       word ptr ES:[BX + 508h],AX
	MOV        word ptr ES:[BX + 506h],AX
	MOV        AX,word ptr ES:[BX + 526h]
	XCHG       word ptr ES:[BX + 528h],AX
	MOV        word ptr ES:[BX + 526h],AX
	MOV        AX,word ptr ES:[BX + 546h]
	XCHG       word ptr ES:[BX + 548h],AX
	MOV        word ptr ES:[BX + 546h],AX
	MOV        AX,word ptr ES:[BX + 566h]
	XCHG       word ptr ES:[BX + 568h],AX
	MOV        word ptr ES:[BX + 566h],AX
L_1046:
	CALL       F_0ec6
	JS         L_1087
	MOV        AX,word ptr ES:[BX + 582h]
	XCHG       word ptr ES:[BX + 584h],AX
	MOV        word ptr ES:[BX + 582h],AX
	MOV        AX,word ptr ES:[BX + 5a2h]
	XCHG       word ptr ES:[BX + 5a4h],AX
	MOV        word ptr ES:[BX + 5a2h],AX
	MOV        AX,word ptr ES:[BX + 5c2h]
	XCHG       word ptr ES:[BX + 5c4h],AX
	MOV        word ptr ES:[BX + 5c2h],AX
	MOV        AX,word ptr ES:[BX + 5e2h]
	XCHG       word ptr ES:[BX + 5e4h],AX
	MOV        word ptr ES:[BX + 5e2h],AX
L_1087:
	CALL       F_0ec6
	JS         L_10c8
	MOV        AX,word ptr ES:[BX + 804h]
	XCHG       word ptr ES:[BX + 806h],AX
	MOV        word ptr ES:[BX + 804h],AX
	MOV        AX,word ptr ES:[BX + 824h]
	XCHG       word ptr ES:[BX + 826h],AX
	MOV        word ptr ES:[BX + 824h],AX
	MOV        AX,word ptr ES:[BX + 844h]
	XCHG       word ptr ES:[BX + 846h],AX
	MOV        word ptr ES:[BX + 844h],AX
	MOV        AX,word ptr ES:[BX + 864h]
	XCHG       word ptr ES:[BX + 866h],AX
	MOV        word ptr ES:[BX + 864h],AX
L_10c8:
	CALL       F_0ec6
	JS         L_1109
	MOV        AX,word ptr ES:[BX + 904h]
	XCHG       word ptr ES:[BX + 906h],AX
	MOV        word ptr ES:[BX + 904h],AX
	MOV        AX,word ptr ES:[BX + 924h]
	XCHG       word ptr ES:[BX + 926h],AX
	MOV        word ptr ES:[BX + 924h],AX
	MOV        AX,word ptr ES:[BX + 944h]
	XCHG       word ptr ES:[BX + 946h],AX
	MOV        word ptr ES:[BX + 944h],AX
	MOV        AX,word ptr ES:[BX + 964h]
	XCHG       word ptr ES:[BX + 966h],AX
	MOV        word ptr ES:[BX + 964h],AX
L_1109:
	CALL       F_0ec6
	JS         L_114a
	MOV        AX,word ptr ES:[BX + 702h]
	XCHG       word ptr ES:[BX + 704h],AX
	MOV        word ptr ES:[BX + 702h],AX
	MOV        AX,word ptr ES:[BX + 722h]
	XCHG       word ptr ES:[BX + 724h],AX
	MOV        word ptr ES:[BX + 722h],AX
	MOV        AX,word ptr ES:[BX + 742h]
	XCHG       word ptr ES:[BX + 744h],AX
	MOV        word ptr ES:[BX + 742h],AX
	MOV        AX,word ptr ES:[BX + 762h]
	XCHG       word ptr ES:[BX + 764h],AX
	MOV        word ptr ES:[BX + 762h],AX
L_114a:
	POP        ES
	RETF
	; Func
	; Func
F_0fff ENDP
F_114c PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       SI
	PUSH       DI
	PUSH       DS
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        AL,byte ptr [BP + 0ah]
	MOV        AH,0h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	SHL        AX,1h
	LDS        SI,dword ptr CS:[W_pCharset_0]
	ADD        SI,AX
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	ADD        BX,word ptr [BP + 8h]
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        CL,8h
L_118c:
	MOV        AL,CL
	OUT        DX,AL
	LODSB
	MOV        byte ptr ES:[BX],AL
	LODSB
	MOV        byte ptr ES:[BX + 28h],AL
	LODSB
	MOV        byte ptr ES:[BX + 50h],AL
	LODSB
	MOV        byte ptr ES:[BX + 78h],AL
	LODSB
	MOV        byte ptr ES:[BX + 0a0h],AL
	LODSB
	MOV        byte ptr ES:[BX + 0c8h],AL
	LODSB
	MOV        byte ptr ES:[BX + 0f0h],AL
	LODSB
	MOV        byte ptr ES:[BX + 118h],AL
	SHR        CL,1h
	JNZ        L_118c
	POP        ES
	POP        DS
	POP        DI
	POP        SI
	POP        BP
	RETF       6h
	; Func
	; Func
F_114c ENDP
F_11c6 PROC FAR
	PUSH       BP
	MOV        BP,SP
	PUSH       DI
	PUSH       ES
	MOV        ES,word ptr CS:[W_GR_SEGMENT]
	MOV        DX,3c4h
	MOV        AL,2h
	OUT        DX,AL
	MOV        DX,3c5h
	MOV        AL,0fh
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,10h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        BX,word ptr [BP + 6h]
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	SHL        BX,1h
	ADD        BX,8h
	SHL        BX,1h
	MOV        BX,word ptr CS:[BX + U_0052]
	MOV        DI,word ptr [BP + 8h]
	SHL        DI,1h
	INC        DI
	ADD        DI,BX
	MOV        AL,0ffh
	OUT        DX,AL
	MOV        AH,AL
	OR         byte ptr ES:[DI],AH
	OR         byte ptr ES:[DI + 1h],AH
	ADD        DI,28h
	OR         byte ptr ES:[DI],AH
	OR         byte ptr ES:[DI + 1h],AH
	ADD        DI,28h
	MOV        AL,0c0h
	OUT        DX,AL
	PUSH       DI
	MOV        CX,0ch
L_122e:
	OR         byte ptr ES:[DI],0c0h
	ADD        DI,28h
	LOOP       L_122e
	POP        DI
	INC        DI
	MOV        AL,3h
	OUT        DX,AL
	MOV        CX,0ch
L_123f:
	OR         byte ptr ES:[DI],3h
	ADD        DI,28h
	LOOP       L_123f
	DEC        DI
	MOV        AL,AH
	OUT        DX,AL
	OR         byte ptr ES:[DI],AH
	OR         byte ptr ES:[DI + 1h],AH
	ADD        DI,28h
	OR         byte ptr ES:[DI],AH
	OR         byte ptr ES:[DI + 1h],AH
	MOV        DX,3ceh
	MOV        AL,3h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0h
	OUT        DX,AL
	MOV        DX,3ceh
	MOV        AL,8h
	OUT        DX,AL
	MOV        DX,3cfh
	MOV        AL,0ffh
	OUT        DX,AL
	POP        ES
	POP        DI
	POP        BP
	RETF
	db 0CBh
F_11c6 ENDP
_TEXT ENDS
END
